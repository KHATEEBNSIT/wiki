#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: git command
* tag
#+BEGIN_SRC sh
git tag 1.0.0 1b2e1d63ff

使用如下命令获取提交 ID：
git log
#+END_SRC

* 替换本地改动

#+BEGIN_SRC sh
使用如下命令替换掉本地改动：
git checkout -- <filename>
#此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。已添加到缓
#存区的改动，以及新文件，都不受影响。


#假如你想要丢弃你所有的本地改动与提交，可以到服务器上获取最新的版本并将你本地主分支指向到它：

git fetch origin
git reset --hard origin/master
#+END_SRC

* Creating Project Pages manually
#+BEGIN_SRC sh
$ git checkout --orphan gh-pages
# Creates our branch, without any parents (it's an orphan!)
# Switched to a new branch 'gh-pages'

git rm -rf .
# Remove all files from the old working tree

$ echo "My GitHub Page" > index.html
$ git add .
$ git commit -a -m "First pages commit"
$ git push origin gh-pages

#To unpublish a project page, delete the remote gh-pages branch:
git push origin --delete gh-pages

#+END_SRC

* Setting up a custom domain with Pages
#+BEGIN_SRC sh
touch CNAME

#+END_SRC

* other
内建的图形化 git：
gitk
彩色的 git 输出：
git config color.ui true
显示历史记录时，只显示一行注释信息：
git config format.pretty oneline
交互地添加文件至缓存区：
git add -i

