#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: 浅谈设计模式：状态模式(State)
#+OPTIONS: num:nil H:2

* 实例
  
* 状态模式(State)
** 目的
允许一个对象当它的内部状态改变时改变它的行为。这个对象看起来改变了它的
类。
** 实现

* 总结
** 状态模式(State)结构
[[./images/state/state_structure.jpeg]]
** 组成
+ 场景类（Context）
  1. 定义用户感兴趣的接口。
  2. 保存一个定义当前状态的具体状态（ConcreteState）子类的实例。
+ 抽象状态类(State)
  定义接口来封装与场景类（Context）的每个特殊状态相关的行为。
+ 具体状态子类（ConcreteState subclasses）
  每个子类实现与场景类（Context）每个状态相关的行为。

** 应用场景
+ 一个对象的行为依赖于它的状态，并且再运行时它必须依赖于这个状态来改变
  它的行为。
+ 代码操作中拥有大量的依赖于对象状态的条件语句。这个状态通常被一个多多
  个枚举定值表示。时常，许多操作包含这同样的条件分支结构。状态模式将每
  个分支放入一个独立的类中。这让你可以把对象的状态当成每个自己负责的对
  象，而且这些对象能互相独立。
