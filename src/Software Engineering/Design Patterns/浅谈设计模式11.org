#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: 浅谈设计模式十一: 迭代器模式(Iterator)
#+OPTIONS: num:nil H:3

* 实例

* 迭代器模式(Iterator)
** 目的
提供一种方法来序列访问一个聚合对象的元素，而不暴露它底层的实现。
** 实现
代码实例在这里]]。
* 总结
** 迭代器模式(Iterator)结构
[[./images/iterator/iterator_structure.jpeg]]
** 组成
+ 迭代器类（Iterator）
  定义一个接口来访问和遍历元素。
+ 具体迭代器类（ConcreteIterator）
  1. 实现迭代器接口。
  2. 保存遍历聚合元素的当前位置
+ 聚合类（Aggregate）
  定义一个接口来创建迭代器对象。
+ 具体聚合类（ConcreteAggregate）
  实现迭代器创建接口来返回相应具体迭代器的一个实例。

** 应用场景
+ 访问一个聚合对象的内容，但却不想暴露它的内部实现。
+ 为聚合对象支持所有遍历方法。
+ 为遍历不同的聚合结构提供一种统一的接口（即，支持多态迭代化）。
