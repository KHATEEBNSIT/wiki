#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: The Standard C Library
#+OPTIONS: num:nil H:2


* Chapter 1: <assert.h>
** macro NDEBUG

The header <assert.h> defines the assert macro and refers to another macro,
NDEBUG
which is not defined by <assert.h>.If NDEBUG is defined as a macro name at the point in
the source file where <assert.h> is included, the assert macro is defined simply as

=#define assert(ignore) ((void) 0)=

* Chapter 2: <ctype.h>

#+begin_src sh
ispunct: !"#$%bf ()*+, -./: ;<=>?@[\IA-'{))-
isdigit: 0123456789
islower: abcdefghijklmnopqrstuvwxyz
isupper: ABCDEFGHIJKLMNOPQRSTUVWXYZ
isalpha: ABCDEFGHIJKLMNOPQRSTWWXYZabcdefghijklmnopqrstuvarxyz
isalnum: 0123456789ABCDEFGHIJKLMNOPQRSTWWXYZabcdefghijklmnopqrstuvarxyz
#+end_src
* Chapter 3: <errno.h>
The header <errno.h> defines several macros, all relating to the
reporting of error conditions.

The macros are
#+begin_src sh
EDOM
ERANGE
#+end_src

Use:
#+begin_src c
 #include <errno.h>
errno == EDOM
#+end_src
* Chapter 4: <float. h>
* Chapter 5: <1imits.h>
#+begin_src sh
  CHAR_BIT   8
  SCHAR_MIN  -127
  SCHAR_MAX  +127
  UCHAR_MAX  255
  INT_MIN    -32767
  INT_MAX    +32767
  UINT_MAX   65535
...
#+end_src

* Chapter 6: <locale. h>
The header <locale. h> declares two functions, one type, and defines
several macros.

** The type is
=etruct lconv=

** Macros:
#+begin_src sh
LC_ALL
LGOLLATE
LC_CTYPE
LC_MONETARY
LC_NUMERIC
#+end_src
** The setlocale function
=char *setlocale(int category, conet char *locale);=

=setlocale(LC_AU, " C " ) ;=

** The localeconv function
=struct lconv *localeconv(void);=

** library changes
Here are all the places where library behavior changes with locale:

+ The functions strcoll and strxrrm, declared in <string. w, can
  change how they collate when category LC-COLLATE changes. The
  functions declared in <ctype.h>, the print and scan functions,
  declared in <stdio . h>, and the numeric conversion functions,
  declared in <stdlib. w, can change how they test and alter certain
  characters when category LC-CTYPE changes.
+ The multibyte functions, declared in <stdlib. w, and the print and
  scan functions, declared in <stdio. w, can change how they parse and
  translate multibyte strings when category LC-CTYPE changes.
+ The print and scan functions, declared in <stdio.w, and atof and
  strtod, declared in<stdlib. w, can change what they use for
  thedecimal point character when category LCJUMERIC changes.
+ The strrtime function, declared in <time .w, can change how it
  converts times to character strings when category LC-TIME changes.
+ The localeconv function, declared in <locale .h>, can change what it
  returns when categories LC-MONETARY or LC-NUMERIC change.
