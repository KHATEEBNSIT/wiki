#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: 浅谈C++ multithreading programming
#+OPTIONS: num:nil H:2


* what and advantage


[[http://en.wikipedia.org/wiki/List_of_C%2B%2B_multi-threading_libraries][other multithreading libraries]]


* pthread basis and example

http://fanqiang.chinaunix.net/a4/b8/20010811/0905001105_b.html

http://www.tutorialspoint.com/cplusplus/cpp_multithreading.htm

http://softpixel.com/~cwright/programming/threads/threads.c.php

http://randu.org/tutorials/threads/

https://computing.llnl.gov/tutorials/pthreads/
* google wrap the pthread 

* Thread Debugging:
http://www.yolinux.com/TUTORIALS/LinuxTutorialPosixThreads.html

* omnithread
http://blog.csdn.net/zhangziliang04/article/details/4239940

http://omniorb.sourceforge.net/omni41/omnithread.html
4.2



* solve the classical problems

* library
POSIX Threads
Library based; requires parallel coding
Specified by the IEEE POSIX 1003.1c standard (1995).
C Language only
Commonly referred to as Pthreads.
Most hardware vendors now offer Pthreads in addition to their proprietary threads implementations.

Very explicit parallelism; requires significant programmer attention
to detail.


OpenMP
Compiler directive based; can use serial code
Jointly defined and endorsed by a group of major computer hardware and software vendors. The OpenMP Fortran API was released October 28, 1997. The C/C++ API was released in late 1998.
Portable / multi-platform, including Unix and Windows platforms
Available in C/C++ and Fortran implementations
Can be very easy and simple to use - provides for "incremental
parallelism"


OpenMP tutorial: computing.llnl.gov/tutorials/openMP
https://computing.llnl.gov/tutorials/openMP/



* boost thread libray

http://www.drdobbs.com/cpp/the-boostthreads-library/184401518

http://www.boost.org/doc/libs/1_55_0/doc/html/thread.html

http://weiwu83.iteye.com/blog/98388

http://www.cnblogs.com/VRS_technology/archive/2010/09/15/1826812.html

http://remonstrate.wordpress.com/2009/12/05/boost-%E7%9A%84-thread/

http://blog.csdn.net/vagrxie/article/details/4246470



* 其他资料
** Books:
+ [[http://shop.oreilly.com/product/9781565921153.do][PThreads Programming]] and [[http://wiki.dreamrunner.org/public_html/Books%20Review/Pthreads%20Programming/Pthreads%20Programming.html][Its notes]]
+ [[http://www.justsoftwaresolutions.co.uk/blog/][Anthony Williams’ blog]] and his book, [[http://www.amazon.com/gp/product/1933988770/ref=as_li_ss_tl?ie=UTF8&tag=preshonprogr-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=1933988770][C++ Concurrency in Action]]
+ Herlihy & Shavit's [[www.amazon.com/gp/product/0123973376/ref=as_li_ss_tl?ie=UTF8&tag=preshonprogr-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0123973376][The Art of Multiprocessor Programming]]

** Online resources:
+ [[www.1024cores.net][Dmitriy V’jukov’s website]] and various [[https://groups.google.com/forum/?fromgroups#!forum/lock-free][forum discussions]]
+ [[http://bartoszmilewski.com/][Bartosz Milewski’s blog]]
+ Charles Bloom’s [[http://cbloomrants.blogspot.ca/2012/06/06-12-12-another-threading-post-index.html][Threading Posts]] on his blog
+ Doug Lea's [[http://g.oswego.edu/dl/jmm/cookbook.html][The JSR-133 Cookbook for Compiler Writers]]
+ [[http://www.kernel.org/doc/Documentation/memory-barriers.txt][memory-barriers.txt document]]
+ Hans Boehm’s [[http://www.hboehm.info/c++mm/][collection of links about the C++11 memory model]]
+ Scott Meyers's [[http://scottmeyers.blogspot.hk/2012/04/information-on-c11-memory-model.html][Information on the C++11 Memory Model ]]
+ Herb Sutter’s [[http://www.gotw.ca/publications/][Effective Concurrency series]]
+ POSIX Standard: http://www.unix.org/version3/ieee_std.html
+ 

* cc

#+begin_src c++

#+end_src

