#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: Google Shell Style Notes
#+OPTIONS: num:nil H:2

* Homepage
http://google-styleguide.googlecode.com/svn/trunk/shell.xml

* Shell Files and Interpreter Invocation
** File Extensions
#+begin_html
<p class="info">
可执行文件应该没有后缀（强烈推荐）或以.sh后缀。库必须有.sh后缀而且
不能被执行。
</p>
#+end_html
However, for libraries it's important to know what language it is and
sometimes there's a need to have similar libraries in different
languages. This allows library files with identical purposes but
different languages to be identically named except for the
language-specific suffix.

** SUID/SGID
#+begin_html
<p class="info">
SUID和SGID被禁止。
</p>
#+end_html
Use sudo to provide elevated access if you need it.
* Environment
** STDOUT vs STDERR
#+begin_html
<p class="info">
所有错误信息输出到STDERR
</p>
#+end_html
This makes it easier to separate normal status from actual issues.

A function to print out error messages along with other status
information is recommended.

#+begin_src sh
err() {
  echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $@" >&2
}

if ! do_something; then
  err "Unable to do_something"
  exit "${E_DID_NOTHING}"
fi
#+end_src
* Comments
** File Header
#+begin_html
<p class="info">
每个文件以一段它内容的描述开始。
</p>
#+end_html


** Function Comments
#+begin_html
<p class="info">

</p>
#+end_html
** Implementation Comments
#+begin_html
<p class="info">

</p>
#+end_html
** TODO Comments
#+begin_html
<p class="info">

</p>
#+end_html
* Formatting
** Indentation
#+begin_html
<p class="info">

</p>
#+end_html
** Line Length and Long Strings
#+begin_html
<p class="info">

</p>
#+end_html
** Pipelines
#+begin_html
<p class="info">

</p>
#+end_html
** Loops
#+begin_html
<p class="info">

</p>
#+end_html
** Case statement
#+begin_html
<p class="info">

</p>
#+end_html
** Variable expansion
#+begin_html
<p class="info">

</p>
#+end_html
** Quoting
#+begin_html
<p class="info">

</p>
#+end_html
* Features and Bugs
** Command Substitution
#+begin_html
<p class="info">

</p>
#+end_html
** Test, [ and [[
#+begin_html
<p class="info">

</p>
#+end_html
** Testing Strings
#+begin_html
<p class="info">

</p>
#+end_html
** Wildcard Expansion of Filenames
#+begin_html
<p class="info">

</p>
#+end_html
** Eval
#+begin_html
<p class="info">

</p>
#+end_html
** Pipes to While
#+begin_html
<p class="info">

</p>
#+end_html
* Naming Conventions
** Function Names
#+begin_html
<p class="info">

</p>
#+end_html
** Variable Names
#+begin_html
<p class="info">

</p>
#+end_html
** Constants and Environment Variable Names
#+begin_html
<p class="info">

</p>
#+end_html
** Source Filenames
#+begin_html
<p class="info">

</p>
#+end_html
** Read-only Variables
#+begin_html
<p class="info">

</p>
#+end_html
** Function Location
#+begin_html
<p class="info">

</p>
#+end_html
** main
#+begin_html
<p class="info">

</p>
#+end_html
* Calling Commands
** Checking Return Values
#+begin_html
<p class="info">

</p>
#+end_html
** Builtin Commands vs. External Commands
#+begin_html
<p class="info">

</p>
#+end_html

* cc

#+begin_src sh

#+end_src
