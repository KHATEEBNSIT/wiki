#+SETUPFILE: ~/.emacs.d/src/org-templates/level-1.org
#+TITLE: Linux Command Sheet
#+OPTIONS: num:nil H:2

* System 
** Check the CPU info and so on
#+begin_src sh
sudo dmidecode | more 
#+end_src
** =find_host_distribution=
#+begin_src sh
host=`lsb_release -a 2>/dev/null | grep Codename: | awk {'print $2'}`
#+end_src
** ip
#+begin_src sh
ipdefault=`ifconfig | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d:
-f2 | awk '{ print $1 }'`
#+end_src
** set ip
#+begin_src sh
sudo ifconfig eth0 192.168.1.1 netmask 255.255.255.0 up
#+end_src
** set MAC Addr
#+begin_src sh
/sbin/ifconfig eth0 down
/sbin/ifconfig eth0 hw ether xx:xx:xx:xx:xx:xx
/sbin/ifconfig eth0 up
或者
ip link set eth0 down
ip link set eth0 address xx:xx:xx:xx:xx:xx
ip link set eth0 up

Or Edit /etc/rcS.d/rc.local，

or Edit /etc/network/interfaces 
pre-up ifconfig eth0 hw ether xx:xx:xx:xx:xx:xx

#+end_src
* General
** extract
#+begin_src sh
extract () {
   if [ -f $1 ] ; then
       case $1 in
	*.tar.bz2)	tar xvjf $1 && cd $(basename "$1" .tar.bz2) ;;
	*.tar.gz)	tar xvzf $1 && cd $(basename "$1" .tar.gz) ;;
	*.tar.xz)	tar Jxvf $1 && cd $(basename "$1" .tar.xz) ;;
	*.bz2)		bunzip2 $1 && cd $(basename "$1" /bz2) ;;
	*.rar)		unrar x $1 && cd $(basename "$1" .rar) ;;
	*.gz)		gunzip $1 && cd $(basename "$1" .gz) ;;
	*.tar)		tar xvf $1 && cd $(basename "$1" .tar) ;;
	*.tbz2)		tar xvjf $1 && cd $(basename "$1" .tbz2) ;;
	*.tgz)		tar xvzf $1 && cd $(basename "$1" .tgz) ;;
	*.zip)		unzip $1 && cd $(basename "$1" .zip) ;;
	*.Z)		uncompress $1 && cd $(basename "$1" .Z) ;;
	*.7z)		7z x $1 && cd $(basename "$1" .7z) ;;
	*)		echo "don't know how to extract '$1'..." ;;
       esac
   else
       echo "'$1' is not a valid file!"
   fi
 }

#+end_src

* Internet
** FTP Server
#+begin_src sh
sudo apt-get install vsftpd

sudo useradd -m ftp
sudo passwd ftp

sudo chmod 777 /home/ftp
#+end_src
+ Configured Files
=sudo emacs /etc/vsftpd.conf=
#+begin_src sh
#独立模式启动
listen=YES

#同时允许4客户端连入，每个IP最多5个进程
max_clients=200
max_per_ip=4

#不允许匿名用户访问，允许本地（系统）用户登录
anonymous_enable=NO
local_enable=YES
write_enable=NO

#是否采用端口20进行数据传输
connect_from_port_20=YES

#生成日志
xferlog_enable=YES

#指定登录转向目录
local_root=/home/ftp/ftp
#+end_src
+ Run
#+begin_src sh
sudo /etc/init.d/vsftpd start
sudo /etc/init.d/vsftpd stop
#+end_src


* Network
** wireless analysis[fn:1]
#+begin_src sh
cat /etc/lsb-release; uname -a
lspci -nnk | grep -iA2 net
lsusb
iwconfig
rfkill list all
lsmod
#+end_src
*** do:
#+begin_src sh
gksudo gedit /etc/pm/config.d/config

#add one line
SUSPEND_MODULES="iwl3945"
#+end_src

*** after you suspend your computer 
and before you connect the wireless again please post the output of:
#+begin_src sh
rfkill list all
lsmod | grep iwl
dmesg | egrep 'iwl|firm|etork|wlan0'
#+end_src

*** do:
#+begin_src sh
gksudo gedit /etc/modprobe.d/50-iwl3945.conf
# add one line:
options iwl3945 debug=10 disable_hw_scan=0 swcrypto=1
#+end_src


* Footnotes

[fn:1] http://ubuntuforums.org/showthread.php?t=2011612


* To read
** at 


使用权限 : 所有使用者

使用方式 : at -V [-q queue] [-f file] [-mldbv] TIME

说明 : at 可以让使用者指定在 TIME 这个特定时刻执行某个程式或指令，TIME 的格式是 HH:MM其中的 HH 为小时，MM 为分钟，甚至你也可以指定 am, pm, midnight, noon, teatime(就是下午 4 点锺)等口语词。

如果想要指定超过一天内的时间，则可以用 MMDDYY 或者 MM/DD/YY 的格式，其中 MM 是分钟，DD 是第几日，YY 是指年份。另外，使用者甚至也可以使用像是 now + 时间间隔来弹性指定时间，其中的时间间隔可以是 minutes, hours, days, weeks

另外，使用者也可指定 today 或 tomorrow 来表示今天或明天。当指定了时间并按下 enter 之后，at 会进入交谈模式并要求输入指令或程式，当你输入完后按下 ctrl+D 即可完成所有动作，至于执行的结果将会寄回你的帐号中。
#+begin_verse
-V : 印出版本编号
-q : 使用指定的伫列(Queue)来储存，at 的资料是存放在所谓的 queue 中，使用者可以同时使用多个 queue，而 queue 的编号为 a, b, c... z 以及 A, B, ... Z 共 52 个
-m : 即使程式/指令执行完成后没有输出结果, 也要寄封信给使用者
-f file : 读入预先写好的命令档。使用者不一定要使用交谈模式来输入，可以先将所有的指定先写入档案后再一次读入
-l : 列出所有的指定 (使用者也可以直接使用 atq 而不用 at -l)
-d : 删除指定 (使用者也可以直接使用 atrm 而不用 at -d)
-v : 列出所有已经完成但尚未删除的指定
#+end_verse
例子 :
三天后的下午 5 点锺执行 /bin/ls :
at 5pm + 3 days /bin/ls

三个星期后的下午 5 点锺执行 /bin/ls :
at 5pm + 2 weeks /bin/ls

明天的 17:20 执行 /bin/date :
at 17:20 tomorrow /bin/date
