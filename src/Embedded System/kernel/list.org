#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: list in kernel
#+OPTIONS: num:nil


http://isis.poly.edu/kulesh/stuff/src/klist/
http://blog.csdn.net/xubin341719/article/details/7098611
http://bbs.chinaunix.net/thread-1981115-1-1.html

http://www.groad.net/bbs/read.php?tid-3544.html
http://hi.baidu.com/ever__love/blog/item/ee8f40f9a99ec7294e4aea68.html

* list_for_each_entry

/**
 * list_for_each_entry	-	iterate over list of given type
 * @pos:	the type * to use as a loop cursor.
 * @head:	the head for your list.
 * @member:	the name of the list_struct within the struct.
 */
#define list_for_each_entry(pos, head, member)				\
	for (pos = list_entry((head)->next, typeof(*pos), member);	\
	     &pos->member != (head); 	\
	     pos = list_entry(pos->member.next, typeof(*pos), member))


/**
 * list_entry - get the struct for this entry
 * @ptr:	the &struct list_head pointer.
 * @type:	the type of the struct this is embedded in.
 * @member:	the name of the list_struct within the struct.
 */
#define list_entry(ptr, type, member) \
	container_of(ptr, type, member)



/**
 * container_of - cast a member of a structure out to the containing structure
 * @ptr:	the pointer to the member.
 * @type:	the type of the container struct this is embedded in.
 * @member:	the name of the member within the struct.
 *
 */
#define container_of(ptr, type, member) ({			\
	const typeof( ((type *)0)->member ) *__mptr = (ptr);	\
	(type *)( (char *)__mptr - offsetof(type,member) );})

