#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: Project Euler
#+OPTIONS: num:nil H:2


* Answer
http://projecteuler.net/
#+begin_src python
#1
sum = 0
for i in range(1,1000):
    if i % 3 == 0 or i % 5 == 0:
        sum += i
print sum

#--------------
#sum = (s+e)*n/2=(d + d*int(x/d)) * int(x/d) /2
#sum = d * int(x/d) * (1 + int(x/d)) / 2
sum = 3*int(999/3)*(1+int(999/3))/2 + 
5*int(999/5)*(1+int(999/5))/2 - 
15*int(999/15)*(1+int(999/15))/2

#2
sum = 0
a = 1
b = 2
while b < 4e6:
    if b % 2 == 0:
        sum += b
    next = a + b
    a = b
    b = next

print sum
#--------------
'''
The Fibonacci series is:
1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610...
Now, replacing an odd number with O and an even with E, we get:
O, O, E, O, O, E, O, O, E, O, O, E, O, O, E...
And so each third number is even.  We don't need to calculate the odd numbers.
Starting from an two odd terms x, y, the series is:
x, y, x + y, x + 2y, 2x + 3y, 3x + 5y
'''
x = y = 1
sum = 0
while ((x + y) < 4e6):
    sum += (x + y)
    x, y = x + 2 * y, 2 * x + 3 * y
    print  x,y
print sum

#3

#4
import sys
for upnum in range(999, 99, -1):
    str_num = str(upnum) + str(upnum)[::-1]
    for div in range(100, 1000):
        if int(str_num) % div == 0:
            res = int(str_num) / div
            if len(str(res)) == 3:
                print str_num
                sys.exit(0)


#+end_src

